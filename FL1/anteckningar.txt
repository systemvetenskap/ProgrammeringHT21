Pusselbitar

VARIABLER
- en låda som kan bevara värdet från exempelvis en beräkning eller inmatning
- kan användas flera gånger
- de kan ändra värde
- eller uppdatera / utöka värde
- alla variabler måste ha en datatyp
- men man kan konvertera (Byta) till en annan datatyp om man vill
- värden kan manipuleras med operatorer,
- aritmetiska: +-*/ %
- öka värdet genom += eller minska -=
- ++
- --
- variablers räckvidd
- begränsar en variabel till dess context
- context kan vara som en liten låda
- vi kan öka en variabels räckvidd genom att lyfta ut den från ett kodblock 
och lägga det i ett större

DATATYPER
- heltal: integer
- strängar: string
- boolska Sant/falskt: bool
- flyttal: double (decimal)
- ett tecken: char

STYRANDE SATSER
- if-satser
- måste ha ett villkor
- som måste valideras som sant eller falskt
- logiska operatorer och relationella operatorer
- en if-sats kan ha en else kopplat till sig. Det betyder typ annars
- men man kan också ha några andra villkor. Det kallas else if, annars om
- ifsatser som är uppfyllda = true, bryter kedjan av andra if-satser, alltså else-if
- tips: rangordna dina if-statements. Störst -> minst eller vice versa
- många gånger har man intervaller, eller olika kombinationer av villkor som ska testas.
--> använd logiska operatorer (OCH ELLER, AND OR), i C#: && || 
- if-satser kan nästlas. Dvs stoppa in en eller flera if-satser i en annan if-sats
- ! ett utropstecken vänder på ett uttryck--> alltså inte är
- == använder vi när vi jämför om två uttryck är exakt lika
- C# är skiftlägeskänsligt, alltså vi gör skillnad på stora och små bokstäver

ARRAYER
- Ett sätt att gruppera variabler
- Att låta en variabel hålla flera värden
- Arrayer brukar upplevas som svårt.
- Du kan skapa arrayer av varje datatyp i C#
- Skapas med []
- Men du måste skapa ett nytt objekt
- Skapas från en grundmall = mall --> Klass
- Arrayen måste ha en storlek
- kan bara hålla data av samma datatyp
- kan dock skapas för vilken datatyp som helst

LOOP
- när man vill snurra igenom alla "saker" som finns i en kollektion eller array
- eller när man vill upprepa samma kodrad x antal gånger
- det finns massa olika typer av loopar
- for, foreach, while, do while
- man kan "hoppa över" kod med continue
- om du vill bryta loopen sätt en break
- en for-loop kan även till exempel  köras baklänges

METODER
- ett avgränsat uppdrag som utförs
- metoder är något som GÖR något
- saker kan beskrivas med egenskaper = hur de är
- och med metoder: vad de kan göra
- skulle eventuellt kunna kallas funktion
- en metod = ett ansvarsområde
- metoder har en tydlig struktur för hur de skapas
- metodhuvud som beskriver vad metoden ska göra och in- och utdata
- man kan ha flera metoder i en stor gruppmetod
Metodhuvud:
accessor = hur publik eller privat ska min metod vara I den här kursen är detta oviktigt. Kör public
nästa sak = metodens utdata
sedan metodens namn

- en metod kan ha 0, eller flera, indataparametrar
- indata kan vara av olika datatyper
- metoder kan överlagras. Att samma metod kan finnas i flera olika varianter.
- många gånger vill man lägga metoderna utanför gränssnittet
- kallas ibland för helpers

OBJEKT
- när vi kodar skapar vi klasser = mallar
- från dessa skapar vi oändligt med objekt (instanser)
- Ett objekt kan även ha beteenden = metoder
- många objekt kan samlas i en collection = Lista
- En lista är som en array, men den är dynamisk
- ett objekt kan gömma egenskaper och metoder = inkapsling
- fields = variabler inuti en klass
- Varje objekt anropar en metod som körs i samband med att det skapas 
- det kallas konstruktor

STANDARD VID NAMNGÌVNING
- variabler börjar med liten bokstav
- metoder börjar med stor bokstav
- klasser börjar med stor bokstav
- fields börjar med _ (underscore)